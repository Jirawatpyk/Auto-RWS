const fs = require('fs');
const path = require('path');
const { logInfo, logFail } = require('../Logs/logger');

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå UID ‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠ mailbox
function getUidStorePath(mailboxName) {
    const safeName = mailboxName.replace(/[^\w]/g, '_');
    return path.join(__dirname, `uidStore_${safeName}.json`);
}

// ‡πÇ‡∏´‡∏•‡∏î UID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
function loadLastSeenUidFromFile(mailboxName) {
    const pathToFile = getUidStorePath(mailboxName);
    try {
        const data = fs.readFileSync(pathToFile, 'utf8');
        const parsed = JSON.parse(data);
        const uid = parsed.lastSeenUid || 0;
        logInfo(`üì• Loaded UID from file (${mailboxName}): ${uid}`);
        return uid;
    } catch {
        logInfo(`üì• UID file not found for ${mailboxName}. Starting fresh.`);
        return 0;
    }
}

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å UID ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå .tmp ‚Üí .json (atomic)
function saveLastSeenUid(mailboxName, uid) {
    const tempPath = getUidStorePath(mailboxName) + '.tmp';
    const finalPath = getUidStorePath(mailboxName);
    try {
        fs.writeFileSync(tempPath, JSON.stringify({ lastSeenUid: uid }));
        fs.renameSync(tempPath, finalPath);
        logInfo(`üíæ Saved UID (${mailboxName}): ${uid}`);
    } catch (err) {
        logFail(`‚ùå Failed to save UID for ${mailboxName}:`, err);
    }
}

module.exports = {
    getUidStorePath,
    loadLastSeenUidFromFile,
    saveLastSeenUid
};
